apiVersion: v1
kind: Template
metadata:
  name: sbe-User-svc-deployment-template
  annotations:
    openshift.io/display-name: SBE_USER SVC DEPLOYMENT
    description: SBE_USER SVC DEPLOYMENT
    iconClass: "icon-java"
    tags: "java"
    template.openshift.io/bindable: "false"
parameters:
  - name: NAMESPACE
    description: The namespace assigned to all of the application objects defined in this template.
    displayName: Namespace
    required: true
    value: rdso-nonprod
  - name: APP_NAME
    description: The name assigned to all of the application objects defined in this template.
    displayName: Application Name
    required: true
    value: user-service
  - name: REPLICA_COUNT
    description: Number of replicas to run
    value: "2"
    required: true
  - name: BUILD_TYPE
    description: The application environment.
    displayName: Application Environment
    required: true
    value: development
  - name: ENVIRONMENT
    description: The application environment.
    displayName: Application Environment
    required: true
    value: nonprod
  - name: DNS_ZONE_NAME
    description: The base domain zone
    displayName: DNS Zone Name
    required: true
objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      generation: 2
      labels:
        app: ${ENVIRONMENT}-${APP_NAME}
        template: ${ENVIRONMENT}-${APP_NAME}-template
      name: ${ENVIRONMENT}-${APP_NAME}-deployment
      namespace: ${NAMESPACE}
    spec:
      template:
        metadata:
          labels:
            name: ${ENVIRONMENT}-${APP_NAME}
        spec:
          containers:
            - name: ${ENVIRONMENT}-${APP_NAME}-pod
              image: docker-registry.default.svc:5000/${NAMESPACE}/${APP_NAME}-${BUILD_TYPE}:image
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: OPENSHIFT_ENABLE_OAUTH
                  value: 'false'
                - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                  value: 'true'
                - name: DISABLE_ADMINISTRATIVE_MONITORS
                  value: 'false'
                - name: KUBERNETES_MASTER
                  value: 'https://kubernetes.default:443'
                - name: KUBERNETES_TRUST_CERTIFICATES
                  value: 'true'
                - name: AWS_DEFAULT_REGION
                  value: us-east-2
                - name: region
                  value: us-east-2
                - name: APP_ENV
                  value: ${ENVIRONMENT}
                - name: APP_NAME
                  value: ${APP_NAME}
                - name: AUTH_URL
                  value: http://${ENVIRONMENT}-oauth-service:8080/oauth/token
                - name: ELASTICSEARCH_SERVICE_URL
                  value: http://${ENVIRONMENT}-elasticsearch-service:8080
                - name: UI_URL
                  value: http://${ENVIRONMENT}-spider-ui.rdso.okd.${DNS_ZONE_NAME}
                - name: RDS_DB_NAME
                  value: spider
                - name: RDS_DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${NAMESPACE}-rds
                      key: rds_db_host
                - name: RDS_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${NAMESPACE}-rds
                      key: rds_db_port
                - name: RDS_DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAMESPACE}-rds
                      key: rds_db_user
                - name: RDS_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAMESPACE}-rds
                      key: rds_db_password
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 2
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 30
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: ${NAMESPACE}-sa
          serviceAccountName: ${NAMESPACE}-sa
          terminationGracePeriodSeconds: 30
      replicas: ${REPLICA_COUNT}
      selector:
        name: ${ENVIRONMENT}-${APP_NAME}
      strategy:
        type: Rolling
        resources:
          limits:
            cpu: 128m
            memory: 512Mi
        rollingParams:
            maxSurge: "20%"
            maxUnavailable: 0
      paused: false
      revisionHistoryLimit: 2
      minReadySeconds: 15
      test: false
labels:
  name: ${APP_NAME}-deployment
